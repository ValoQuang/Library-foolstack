{"ast":null,"code":"export const required = val => val && val.length;\nexport const requiredNum = val => !!val;\nexport const maxLength = len => val => !val || val.length <= len;\nexport const minLength = len => val => val && val.length >= len;\nexport const maxVal = len => val => !val || val <= len;\nexport const minVal = len => val => val && val >= len;\nexport const isNumber = val => !isNaN(Number(val));\nexport const validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\nexport const matchcreds = original => val => val === original;","map":{"version":3,"sources":["C:/Users/Quang/Documents/GitHub/Library-management-/client/src/components/Validator/index.tsx"],"names":["required","val","length","requiredNum","maxLength","len","minLength","maxVal","minVal","isNumber","isNaN","Number","validEmail","test","matchcreds","original"],"mappings":"AACA,OAAO,MAAMA,QAAQ,GAAIC,GAAD,IAASA,GAAG,IAAIA,GAAG,CAACC,MAArC;AACP,OAAO,MAAMC,WAAW,GAAIF,GAAD,IAAa,CAAC,CAAEA,GAApC;AACP,OAAO,MAAMG,SAAS,GAAIC,GAAD,IAAcJ,GAAD,IAAa,CAAEA,GAAF,IAAWA,GAAG,CAACC,MAAJ,IAAcG,GAArE;AACP,OAAO,MAAMC,SAAS,GAAID,GAAD,IAAcJ,GAAD,IAAcA,GAAD,IAAUA,GAAG,CAACC,MAAJ,IAAcG,GAApE;AACP,OAAO,MAAME,MAAM,GAAIF,GAAD,IAAcJ,GAAD,IAAa,CAAEA,GAAF,IAAWA,GAAG,IAAGI,GAA1D;AACP,OAAO,MAAMG,MAAM,GAAIH,GAAD,IAAcJ,GAAD,IAAcA,GAAD,IAAUA,GAAG,IAAGI,GAAzD;AACP,OAAO,MAAMI,QAAQ,GAAIR,GAAD,IAAa,CAACS,KAAK,CAACC,MAAM,CAACV,GAAD,CAAP,CAApC;AACP,OAAO,MAAMW,UAAU,GAAIX,GAAD,IAAa,4CAA4CY,IAA5C,CAAiDZ,GAAjD,CAAhC;AACP,OAAO,MAAMa,UAAU,GAAIC,QAAD,IAAmBd,GAAD,IAAeA,GAAG,KAAGc,QAA1D","sourcesContent":["\r\nexport const required = (val) => val && val.length;\r\nexport const requiredNum = (val:any) => !!(val);\r\nexport const maxLength = (len:any) => (val:any) => !(val) || (val.length <= len);\r\nexport const minLength = (len:any) => (val:any) => (val) && (val.length >= len);\r\nexport const maxVal = (len:any) => (val:any) => !(val) || (val<= len);\r\nexport const minVal = (len:any) => (val:any) => (val) && (val>= len);\r\nexport const isNumber = (val:any) => !isNaN(Number(val));\r\nexport const validEmail = (val:any) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nexport const matchcreds = (original:any) => (val:any) =>  (val===original);\r\n"]},"metadata":{},"sourceType":"module"}