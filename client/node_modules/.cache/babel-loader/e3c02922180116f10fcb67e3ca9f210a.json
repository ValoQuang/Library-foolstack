{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Quang\\\\Documents\\\\GitHub\\\\Library-management-\\\\client\\\\src\\\\components\\\\MainComponent.js\";\nimport React, { Component } from 'react';\nimport Header from './HeaderFooter/HeaderComponent';\nimport Footer from './HeaderFooter/FooterComponent';\nimport Home from './Issue/HomeComponent';\nimport Booklist from './Book/BooksComponent';\nimport Search from './Search/SearchComponent';\nimport BookDetail from './Book/BookDetailComponent';\nimport Profile from './Users/ProfileComponent';\nimport AddBook from './Book/AddBookComponent';\nimport History from './Issue/HistoryComponent';\nimport Issue from './Issue/IssueComponent';\nimport Return from './Issue/ReturnComponent';\nimport UserDetail from './Users/UserDetailComponent';\nimport Stats from './Issue/StatsComponent';\nimport Log from './Issue/LogComponent';\nimport UserList from './Users/UserListComponent';\nimport { required, requiredNum, maxLength, minLength, maxVal, minVal, isNumber } from \"./Validator/index\";\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Modal, ModalBody, ModalHeader, Button, Label, Col, Row } from 'reactstrap';\nimport { postBook, fetchBooks, editBook, deleteBook } from '../redux/actions/bookAction';\nimport { loginUser, logoutUser, registerUser, editUser, editPassword, fetchUsers } from '../redux/actions/userAction';\nimport { returnIssue, fetchIssues, postIssue } from '../redux/actions/issueAction';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst mapStateToProps = state => {\n  return {\n    books: state.books,\n    auth: state.auth,\n    issues: state.issues,\n    users: state.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchBooks: () => {\n    dispatch(fetchBooks());\n  },\n  fetchIssues: student => {\n    dispatch(fetchIssues(student));\n  },\n  fetchUsers: () => {\n    dispatch(fetchUsers());\n  },\n  postBook: (name, author, description, isbn, cat, floor, shelf, copies) => dispatch(postBook(name, author, description, isbn, cat, floor, shelf, copies)),\n  editBook: (_id, name, author, description, isbn, cat, floor, shelf, copies) => dispatch(editBook(_id, name, author, description, isbn, cat, floor, shelf, copies)),\n  deleteBook: _id => dispatch(deleteBook(_id)),\n  loginUser: creds => dispatch(loginUser(creds)),\n  logoutUser: () => dispatch(logoutUser()),\n  registerUser: creds => dispatch(registerUser(creds)),\n  editUser: (_id, firstname, lastname, roll, email) => dispatch(editUser(_id, firstname, lastname, roll, email)),\n  editPassword: (_id, username, password) => dispatch(editPassword(_id, username, password)),\n  postIssue: (bookId, studentId) => dispatch(postIssue(bookId, studentId)),\n  returnIssue: issueId => dispatch(returnIssue(issueId))\n});\n\nclass Main extends Component {\n  componentDidMount() {\n    this.props.fetchBooks();\n\n    if (this.props.auth.isAuthenticated) {\n      this.props.fetchIssues(!this.props.auth.userinfo.admin);\n    }\n\n    if (this.props.auth.isAuthenticated && this.props.auth.userinfo.admin) {\n      this.props.fetchUsers();\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDeleteModalOpen: false,\n      isEditModalOpen: false,\n      selectedBook: null\n    };\n    this.toggleDeleteModal = this.toggleDeleteModal.bind(this);\n    this.toggleEditModal = this.toggleEditModal.bind(this);\n    this.changeSelected = this.changeSelected.bind(this);\n    this.handleSubmitEdit = this.handleSubmitEdit.bind(this);\n  }\n\n  handleSubmitEdit(values) {\n    this.toggleEditModal();\n    this.props.editBook(this.state.selectedBook._id, values.name, values.author, values.description, values.isbn, values.cat, values.floor, values.shelf, values.copies);\n  }\n\n  changeSelected(_id) {\n    this.setState({\n      selectedBook: this.props.books.books.filter(book => book._id === _id)[0]\n    });\n  }\n\n  toggleDeleteModal() {\n    this.setState({\n      isDeleteModalOpen: !this.state.isDeleteModalOpen\n    });\n  }\n\n  toggleEditModal() {\n    this.setState({\n      isEditModalOpen: !this.state.isEditModalOpen\n    });\n  }\n\n  render() {\n    const BookWithId = _ref => {\n      let {\n        match\n      } = _ref;\n      let selectedBook = this.props.books.books.filter(book => book._id === match.params.bookId)[0];\n      let notFoundErr = null;\n\n      if (selectedBook === undefined) {\n        notFoundErr = \"\\n\\n Error 404 :  Book not found\";\n      }\n\n      return /*#__PURE__*/React.createElement(BookDetail, {\n        book: selectedBook,\n        isLoading: this.props.books.isLoading,\n        errMess: this.props.books.errMess || notFoundErr,\n        toggleEditModal: this.toggleEditModal,\n        changeSelected: this.changeSelected,\n        isAdmin: this.props.auth.userinfo == null ? false : this.props.auth.userinfo.admin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      });\n    };\n\n    const UserWithId = _ref2 => {\n      let {\n        match\n      } = _ref2;\n      let selectedUser = this.props.users.users.filter(user => user._id === match.params.userId)[0];\n      let notFoundErr = null;\n\n      if (selectedUser === undefined) {\n        notFoundErr = \"\\n\\n Error 404 :  User not found\";\n      }\n\n      return /*#__PURE__*/React.createElement(UserDetail, {\n        user: selectedUser,\n        isLoading: this.props.users.isLoading,\n        errMess: this.props.users.errMess || notFoundErr,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }\n      });\n    };\n\n    const PrivateRouteCommon = _ref3 => {\n      let {\n        component: Component,\n        ...rest\n      } = _ref3;\n      return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n        render: props => this.props.auth.isAuthenticated ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }\n        })) : /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: '/home',\n            state: {\n              from: props.location\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    const PrivateRouteAdmin = _ref4 => {\n      let {\n        component: Component,\n        ...rest\n      } = _ref4;\n      return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n        render: props => this.props.auth.isAuthenticated && this.props.auth.userinfo.admin ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }\n        })) : /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: '/home',\n            state: {\n              from: props.location\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    const PrivateRoute = _ref5 => {\n      let {\n        component: Component,\n        ...rest\n      } = _ref5;\n      return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n        render: props => this.props.auth.isAuthenticated && !this.props.auth.userinfo.admin ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }\n        })) : /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: '/home',\n            state: {\n              from: props.location\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    let uniqueIsbn = defaultIsbn => val => !this.props.books.books.some(book => book.isbn === val) || val === defaultIsbn;\n\n    let uniqueName = defaultName => val => !this.props.books.books.some(book => book.name === val) || val === defaultName;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      auth: this.props.auth,\n      loginUser: this.props.loginUser,\n      logoutUser: this.props.logoutUser,\n      registerUser: this.props.registerUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      location: this.props.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/home\",\n      component: () => /*#__PURE__*/React.createElement(Home, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 66\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/search\",\n      component: () => /*#__PURE__*/React.createElement(Search, {\n        books: this.props.books.books,\n        booksLoading: this.props.books.isLoading,\n        booksErrMess: this.props.books.errMess,\n        isSignedIn: this.props.auth.isAuthenticated,\n        isAdmin: this.props.auth.userinfo == null ? false : this.props.auth.userinfo.admin,\n        toggleEditModal: this.toggleEditModal,\n        toggleDeleteModal: this.toggleDeleteModal,\n        changeSelected: this.changeSelected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 68\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/books\",\n      component: () => /*#__PURE__*/React.createElement(Booklist, {\n        books: this.props.books.books,\n        booksLoading: this.props.books.isLoading,\n        booksErrMess: this.props.books.errMess,\n        isSignedIn: this.props.auth.isAuthenticated,\n        isAdmin: this.props.auth.userinfo == null ? false : this.props.auth.userinfo.admin,\n        auth: this.props.auth,\n        toggleEditModal: this.toggleEditModal,\n        toggleDeleteModal: this.toggleDeleteModal,\n        changeSelected: this.changeSelected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 67\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/books/:bookId\",\n      component: BookWithId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRouteCommon, {\n      exact: true,\n      path: \"/profile\",\n      component: () => /*#__PURE__*/React.createElement(Profile, {\n        auth: this.props.auth,\n        editUser: this.props.editUser,\n        editPassword: this.props.editPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 82\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRouteAdmin, {\n      exact: true,\n      path: \"/add_book\",\n      component: () => /*#__PURE__*/React.createElement(AddBook, {\n        isAdmin: this.props.auth.userinfo == null ? false : this.props.auth.userinfo.admin,\n        postBook: this.props.postBook,\n        books: this.props.books.books,\n        booksLoading: this.props.books.isLoading,\n        booksErrMess: this.props.books.errMess,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 83\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/profile\",\n      component: () => /*#__PURE__*/React.createElement(Profile, {\n        auth: this.props.auth,\n        editUser: this.props.editUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 76\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/history\",\n      component: () => /*#__PURE__*/React.createElement(History, {\n        issues: this.props.issues,\n        auth: this.props.auth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 77\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRouteAdmin, {\n      exact: true,\n      path: \"/logs\",\n      component: () => /*#__PURE__*/React.createElement(Log, {\n        issues: this.props.issues,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 79\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRouteAdmin, {\n      exact: true,\n      path: \"/list_students\",\n      component: () => /*#__PURE__*/React.createElement(UserList, {\n        users: this.props.users.users.filter(user => !user.admin),\n        usersLoading: this.props.users.isLoading,\n        usersErrMess: this.props.users.errMess,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 90\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRouteAdmin, {\n      exact: true,\n      path: \"/list_admins\",\n      component: () => /*#__PURE__*/React.createElement(UserList, {\n        users: this.props.users.users.filter(user => user.admin),\n        usersLoading: this.props.users.isLoading,\n        usersErrMess: this.props.users.errMess,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 88\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRouteAdmin, {\n      exact: true,\n      path: \"/issue\",\n      component: () => /*#__PURE__*/React.createElement(Issue, {\n        auth: this.props.auth,\n        books: this.props.books.books,\n        booksLoading: this.props.books.isLoading,\n        booksErrMess: this.props.books.errMess,\n        users: this.props.users.users,\n        usersLoading: this.props.users.isLoading,\n        usersErrMess: this.props.users.errMess,\n        postIssue: this.props.postIssue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 80\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRouteAdmin, {\n      exact: true,\n      path: \"/return\",\n      component: () => /*#__PURE__*/React.createElement(Return, {\n        issues: this.props.issues,\n        auth: this.props.auth,\n        returnIssue: this.props.returnIssue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 80\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRouteAdmin, {\n      path: \"/users/:userId\",\n      component: UserWithId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRouteAdmin, {\n      path: \"/stats\",\n      component: () => /*#__PURE__*/React.createElement(Stats, {\n        issues: this.props.issues,\n        books: this.props.books.books,\n        booksLoading: this.props.books.isLoading,\n        booksErrMess: this.props.books.errMess,\n        users: this.props.users.users,\n        usersLoading: this.props.users.isLoading,\n        usersErrMess: this.props.users.errMess,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 73\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.isDeleteModalOpen,\n      toggle: this.toggleDeleteModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleDeleteModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 22\n      }\n    }, \"Confirm Deletion\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 22\n      }\n    }, \"Book details : \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 39\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 44\n      }\n    }), \"Name : \", this.state.selectedBook ? this.state.selectedBook.name : '', \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 90\n      }\n    }), \"Authors : \", this.state.selectedBook ? this.state.selectedBook.author : '', \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 95\n      }\n    }), \"ISBN Number : \", this.state.selectedBook ? this.state.selectedBook.isbn : '', \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 97\n      }\n    }), \"Available Copies : \", this.state.selectedBook ? this.state.selectedBook.copies : '', \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 104\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 110\n      }\n    }), \"Are you sure you wish to delete this book ? \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 74\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      onClick: () => {\n        this.props.deleteBook(this.state.selectedBook._id);\n        this.toggleDeleteModal();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 10\n      }\n    }, \"Yes\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      color: \"warning\",\n      onClick: () => {\n        this.toggleDeleteModal();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 10\n      }\n    }, \"No\"))), this.state.selectedBook ? /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.isEditModalOpen,\n      toggle: this.toggleEditModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleEditModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 22\n      }\n    }, \"Edit a book\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(LocalForm, {\n      onSubmit: values => this.handleSubmitEdit(values),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"name\",\n      md: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 33\n      }\n    }, \"Name \"), /*#__PURE__*/React.createElement(Col, {\n      md: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Control.text, {\n      model: \".name\",\n      id: \"name\",\n      name: \"name\",\n      defaultValue: this.state.selectedBook.name,\n      className: \"form-control\",\n      validators: {\n        required,\n        minLength: minLength(3),\n        uniqueName: uniqueName(this.state.selectedBook.name)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".name\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: 'Must be greater than 2 characters',\n        uniqueName: ' There exists a book with this name already'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"author\",\n      md: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 33\n      }\n    }, \"Authors \"), /*#__PURE__*/React.createElement(Col, {\n      md: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Control.text, {\n      model: \".author\",\n      id: \"author\",\n      name: \"author\",\n      defaultValue: this.state.selectedBook.author,\n      className: \"form-control\",\n      validators: {\n        required,\n        minLength: minLength(3)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".author\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: 'Must be greater than 2 characters'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"isbn\",\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 33\n      }\n    }, \"ISBN No.\"), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Control.text, {\n      model: \".isbn\",\n      id: \"isbn\",\n      name: \"isbn\",\n      defaultValue: this.state.selectedBook.isbn,\n      className: \"form-control\",\n      validators: {\n        required,\n        minLength: minLength(10),\n        maxLength: maxLength(13),\n        isNumber,\n        uniqueIsbn: uniqueIsbn(this.state.selectedBook.isbn)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".isbn\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: 'Must be greater than 9 numbers',\n        maxLength: 'Must be 13 numbers or less',\n        isNumber: 'Must be a number',\n        uniqueIsbn: ' There exists a book with this ISBN No.'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"cat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 29\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(Control.select, {\n      model: \".cat\",\n      id: \"cat\",\n      className: \"form-control\",\n      defaultValue: this.state.selectedBook.cat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 31\n      }\n    }, \"Romance\"), \" \", /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 56\n      }\n    }, \"Technology\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 31\n      }\n    }, \"Computer Science\"), \" \", /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 65\n      }\n    }, \"Management\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 31\n      }\n    }, \"Electronics\"), \" \", /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 60\n      }\n    }, \"Physics\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 31\n      }\n    }, \"Chemistry\"), \" \", /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 58\n      }\n    }, \"Mathematics\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 31\n      }\n    }, \"Fiction\"), \" \", /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 56\n      }\n    }, \"Philosophy\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 31\n      }\n    }, \"Language\"), \" \", /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 57\n      }\n    }, \"Arts\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 31\n      }\n    }, \"Other\")))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"copies\",\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 33\n      }\n    }, \" Copies Available\"), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Control.text, {\n      model: \".copies\",\n      id: \"copies\",\n      name: \"copies\",\n      defaultValue: this.state.selectedBook.copies,\n      className: \"form-control\",\n      validators: {\n        requiredNum,\n        minVal: minVal(1),\n        maxVal: maxVal(1000),\n        isNumber\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".copies\",\n      messages: {\n        requiredNum: 'Required',\n        minVal: 'Must be greater than 0',\n        maxVal: 'Must be 1000 or less',\n        isNumber: 'Must be a number'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"floor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 29\n      }\n    }, \"Floor \"), /*#__PURE__*/React.createElement(Control.select, {\n      model: \".floor\",\n      id: \"floor\",\n      className: \"form-control\",\n      defaultValue: this.state.selectedBook.floor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 31\n      }\n    }, \"0\"), \" \", /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 50\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 31\n      }\n    }, \"2\"), \" \", /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 50\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 31\n      }\n    }, \"4\"), \" \", /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 50\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 31\n      }\n    }, \"6\"), \" \", /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 50\n      }\n    }, \"7\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 31\n      }\n    }, \"8\")))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"shelf\",\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 33\n      }\n    }, \" Shelf\"), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Control.text, {\n      model: \".shelf\",\n      id: \"shelf\",\n      name: \"shelf\",\n      defaultValue: this.state.selectedBook.shelf,\n      className: \"form-control\",\n      validators: {\n        requiredNum,\n        minVal: minVal(1),\n        maxVal: maxVal(100),\n        isNumber\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".shelf\",\n      messages: {\n        requiredNum: 'Required',\n        minVal: 'Must be greater than 0',\n        maxVal: 'Must be 100 or less',\n        isNumber: 'Must be a number'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"description\",\n      md: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 33\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Col, {\n      md: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Control.textarea, {\n      model: \".description\",\n      id: \"description\",\n      name: \"description\",\n      rows: \"12\",\n      defaultValue: this.state.selectedBook.description,\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"ml-auto mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: \"bg-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 25\n      }\n    }, \"Submit\")))))) : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 22\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","map":{"version":3,"sources":["C:/Users/Quang/Documents/GitHub/Library-management-/client/src/components/MainComponent.js"],"names":["React","Component","Header","Footer","Home","Booklist","Search","BookDetail","Profile","AddBook","History","Issue","Return","UserDetail","Stats","Log","UserList","required","requiredNum","maxLength","minLength","maxVal","minVal","isNumber","Switch","Route","Redirect","withRouter","connect","Modal","ModalBody","ModalHeader","Button","Label","Col","Row","postBook","fetchBooks","editBook","deleteBook","loginUser","logoutUser","registerUser","editUser","editPassword","fetchUsers","returnIssue","fetchIssues","postIssue","Control","LocalForm","Errors","mapStateToProps","state","books","auth","issues","users","mapDispatchToProps","dispatch","student","name","author","description","isbn","cat","floor","shelf","copies","_id","creds","firstname","lastname","roll","email","username","password","bookId","studentId","issueId","Main","componentDidMount","props","isAuthenticated","userinfo","admin","constructor","isDeleteModalOpen","isEditModalOpen","selectedBook","toggleDeleteModal","bind","toggleEditModal","changeSelected","handleSubmitEdit","values","setState","filter","book","render","BookWithId","match","params","notFoundErr","undefined","isLoading","errMess","UserWithId","selectedUser","user","userId","PrivateRouteCommon","component","rest","pathname","from","location","PrivateRouteAdmin","PrivateRoute","uniqueIsbn","defaultIsbn","val","some","uniqueName","defaultName"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Header from './HeaderFooter/HeaderComponent';\r\nimport Footer from './HeaderFooter/FooterComponent';\r\nimport Home from './Issue/HomeComponent';\r\nimport Booklist from './Book/BooksComponent';\r\nimport Search from './Search/SearchComponent';\r\nimport BookDetail from './Book/BookDetailComponent';\r\nimport Profile from './Users/ProfileComponent';\r\nimport AddBook from './Book/AddBookComponent';\r\nimport History from './Issue/HistoryComponent';\r\nimport Issue from './Issue/IssueComponent';\r\nimport Return from './Issue/ReturnComponent';\r\nimport UserDetail from './Users/UserDetailComponent';\r\nimport Stats from './Issue/StatsComponent';\r\nimport Log from './Issue/LogComponent';\r\nimport UserList from './Users/UserListComponent';\r\n\r\nimport {required,requiredNum, maxLength, minLength, maxVal, minVal, isNumber} from \"./Validator/index\"\r\nimport {Switch,Route,Redirect, withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {Modal,ModalBody,ModalHeader,Button, Label, Col, Row} from 'reactstrap';\r\nimport { postBook, fetchBooks, editBook, deleteBook} from '../redux/actions/bookAction';\r\nimport {loginUser, logoutUser, registerUser, editUser, editPassword,fetchUsers } from '../redux/actions/userAction';\r\nimport { returnIssue, fetchIssues, postIssue } from '../redux/actions/issueAction';\r\nimport { Control, LocalForm, Errors  } from 'react-redux-form';\r\n\r\n\r\nconst mapStateToProps= (state)=>{\r\n  return{\r\n    books: state.books,\r\n    auth: state.auth,\r\n    issues: state.issues,\r\n    users: state.users\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchBooks: () => { dispatch(fetchBooks())},\r\n  fetchIssues: (student) =>{ dispatch(fetchIssues(student))},\r\n  fetchUsers: () => { dispatch(fetchUsers())},\r\n  postBook: (name, author, description, isbn, cat, floor, shelf, copies) => dispatch(postBook(name, author, description, isbn, cat, floor, shelf, copies)),\r\n  editBook: (_id, name, author, description, isbn, cat, floor, shelf, copies) => dispatch(editBook(_id, name, author, description, isbn, cat, floor, shelf, copies)),\r\n  deleteBook: (_id) =>  dispatch(deleteBook(_id)),\r\n  loginUser: (creds) => dispatch(loginUser(creds)),\r\n  logoutUser: () => dispatch(logoutUser()),\r\n  registerUser: (creds) => dispatch(registerUser(creds)),\r\n  editUser: (_id, firstname, lastname, roll, email) => dispatch(editUser(_id, firstname, lastname, roll, email)),\r\n  editPassword : (_id,username,password) => dispatch(editPassword(_id,username,password)),\r\n  postIssue: (bookId,studentId) => (dispatch(postIssue(bookId,studentId))),\r\n  returnIssue: (issueId) => (dispatch(returnIssue(issueId)))\r\n});\r\n\r\nclass Main extends Component {\r\n  \r\n  componentDidMount() {\r\n    this.props.fetchBooks();\r\n    if(this.props.auth.isAuthenticated){\r\n      this.props.fetchIssues(!this.props.auth.userinfo.admin);\r\n    }\r\n    if(this.props.auth.isAuthenticated&&this.props.auth.userinfo.admin){\r\n      this.props.fetchUsers();\r\n    }\r\n  }\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n          isDeleteModalOpen: false,\r\n          isEditModalOpen: false,\r\n          selectedBook: null\r\n        };\r\n        this.toggleDeleteModal=this.toggleDeleteModal.bind(this);\r\n        this.toggleEditModal=this.toggleEditModal.bind(this);\r\n        this.changeSelected=this.changeSelected.bind(this);\r\n        this.handleSubmitEdit = this.handleSubmitEdit.bind(this);\r\n      }\r\n    \r\n      handleSubmitEdit(values) {\r\n        this.toggleEditModal();\r\n        this.props.editBook(this.state.selectedBook._id, values.name, values.author,\r\n          values.description, values.isbn, values.cat, values.floor, values.shelf, values.copies);     \r\n        }\r\n    \r\n    changeSelected(_id){\r\n      this.setState({selectedBook:this.props.books.books.filter((book)=>(book._id===_id))[0]});\r\n    }\r\n\r\n    toggleDeleteModal(){\r\n      this.setState({isDeleteModalOpen: !this.state.isDeleteModalOpen})\r\n    }\r\n    \r\n    toggleEditModal(){\r\n      this.setState({isEditModalOpen: !this.state.isEditModalOpen});\r\n    }\r\n\r\n    render(){\r\n      const BookWithId = ({match}) => {\r\n      let selectedBook=this.props.books.books.filter((book) => (book._id)===(match.params.bookId))[0]\r\n      let notFoundErr=null;\r\n      if(selectedBook===undefined){\r\n      notFoundErr=(\"\\n\\n Error 404 :  Book not found\");\r\n      }  \r\n      return(\r\n          <BookDetail book={selectedBook}\r\n          isLoading={this.props.books.isLoading}\r\n          errMess={this.props.books.errMess||notFoundErr}\r\n          toggleEditModal={this.toggleEditModal}\r\n          changeSelected={this.changeSelected}\r\n          isAdmin={(this.props.auth.userinfo==null)?false:(this.props.auth.userinfo.admin)}\r\n          />\r\n          );\r\n      };\r\n    \r\n      const UserWithId = ({match}) => {\r\n        let selectedUser=this.props.users.users.filter((user) => ((user._id)===(match.params.userId)))[0];\r\n        let notFoundErr=null;\r\n        if(selectedUser===undefined){\r\n        notFoundErr=(\"\\n\\n Error 404 :  User not found\");\r\n        }  \r\n        return(\r\n            <UserDetail user={selectedUser}\r\n            isLoading={this.props.users.isLoading}\r\n            errMess={this.props.users.errMess||notFoundErr}\r\n            />\r\n            );\r\n        };\r\n   \r\n      const PrivateRouteCommon = ({ component: Component, ...rest }) => (\r\n        <Route {...rest} render={(props) => (\r\n          this.props.auth.isAuthenticated\r\n            ? <Component {...props} />\r\n            : <Redirect to={{\r\n                pathname: '/home',\r\n                state: { from: props.location }\r\n              }} />\r\n        )} />\r\n      );\r\n\r\n      const PrivateRouteAdmin = ({ component: Component, ...rest }) => (\r\n        <Route {...rest} render={(props) => (\r\n          this.props.auth.isAuthenticated&&this.props.auth.userinfo.admin\r\n            ? <Component {...props} />\r\n            : <Redirect to={{\r\n                pathname: '/home',\r\n                state: { from: props.location }\r\n              }} />\r\n        )} />\r\n      );\r\n\r\n      const PrivateRoute = ({ component: Component, ...rest }) => (\r\n        <Route {...rest} render={(props) => (\r\n          this.props.auth.isAuthenticated&&!this.props.auth.userinfo.admin\r\n            ? <Component {...props} />\r\n            : <Redirect to={{\r\n                pathname: '/home',\r\n                state: { from: props.location }\r\n              }} />\r\n        )} />\r\n      );\r\n\r\n      let uniqueIsbn= (defaultIsbn)=> (val) =>(!this.props.books.books.some((book)=>(book.isbn===val))||(val===defaultIsbn))\r\n      let uniqueName= (defaultName)=>(val) =>(!this.props.books.books.some((book)=>(book.name===val))||(val===defaultName))\r\n\r\n    return ( \r\n          <div className=\"App\">\r\n          <Header auth={this.props.auth} \r\n          loginUser={this.props.loginUser} \r\n          logoutUser={this.props.logoutUser}\r\n          registerUser={this.props.registerUser}\r\n          />\r\n          <Switch location={this.props.location}>\r\n                      <Route exact path='/home' component={() => <Home />} />\r\n                      <Route exact path='/search' component={() => <Search \r\n                      books={this.props.books.books}\r\n                      booksLoading={this.props.books.isLoading}\r\n                      booksErrMess={this.props.books.errMess}\r\n                      isSignedIn={this.props.auth.isAuthenticated}\r\n                      isAdmin={(this.props.auth.userinfo==null)?false:(this.props.auth.userinfo.admin)}\r\n                      toggleEditModal={this.toggleEditModal}\r\n                      toggleDeleteModal={this.toggleDeleteModal}\r\n                      changeSelected={this.changeSelected}\r\n                />}\r\n                />\r\n\r\n                      <Route exact path='/books' component={() => <Booklist\r\n                      books={this.props.books.books}\r\n                      booksLoading={this.props.books.isLoading}\r\n                      booksErrMess={this.props.books.errMess}\r\n                      isSignedIn={this.props.auth.isAuthenticated}\r\n                      isAdmin={(this.props.auth.userinfo==null)?false:(this.props.auth.userinfo.admin)}\r\n                      auth={this.props.auth}\r\n                      toggleEditModal={this.toggleEditModal}\r\n                      toggleDeleteModal={this.toggleDeleteModal}\r\n                      changeSelected={this.changeSelected}/>}/>\r\n                      <Route path='/books/:bookId' component={BookWithId} />\r\n                      <PrivateRouteCommon exact path='/profile' component={() => <Profile\r\n                      auth={this.props.auth}\r\n                      editUser={this.props.editUser} \r\n                      editPassword={this.props.editPassword}/>\r\n                      }\r\n                      />\r\n                       <PrivateRouteAdmin exact path='/add_book' component={() => <AddBook\r\n                      isAdmin={(this.props.auth.userinfo==null)?false:(this.props.auth.userinfo.admin)}\r\n                      postBook={this.props.postBook}\r\n                      books={this.props.books.books}\r\n                      booksLoading={this.props.books.isLoading}\r\n                      booksErrMess={this.props.books.errMess}\r\n                      />\r\n                      }/>\r\n                      <PrivateRoute exact path='/profile' component={() => <Profile\r\n                      auth={this.props.auth}\r\n                      editUser={this.props.editUser} />}\r\n                      />\r\n                       <PrivateRoute exact path='/history' component={() => <History\r\n                      issues={this.props.issues}\r\n                      auth={this.props.auth}\r\n                     />}\r\n                      />\r\n                       <PrivateRouteAdmin exact path='/logs' component={() => <Log\r\n                      issues={this.props.issues}\r\n                     />}\r\n                      />\r\n                         <PrivateRouteAdmin exact path='/list_students' component={() => <UserList\r\n                      users={this.props.users.users.filter((user)=>(!user.admin))}\r\n                      usersLoading={this.props.users.isLoading}\r\n                      usersErrMess={this.props.users.errMess}\r\n                     />}\r\n                      />\r\n                         <PrivateRouteAdmin exact path='/list_admins' component={() => <UserList\r\n                      users={this.props.users.users.filter((user)=>(user.admin))}\r\n                      usersLoading={this.props.users.isLoading}\r\n                      usersErrMess={this.props.users.errMess}\r\n                     />}\r\n                      />\r\n                       <PrivateRouteAdmin exact path='/issue' component={() => <Issue\r\n                      auth={this.props.auth}\r\n                      books={this.props.books.books}\r\n                      booksLoading={this.props.books.isLoading}\r\n                      booksErrMess={this.props.books.errMess}\r\n                      users={this.props.users.users}\r\n                      usersLoading={this.props.users.isLoading}\r\n                      usersErrMess={this.props.users.errMess}\r\n                      postIssue={this.props.postIssue}\r\n                       />} />\r\n                      <PrivateRouteAdmin exact path='/return' component={() => <Return\r\n                      issues={this.props.issues}\r\n                      auth={this.props.auth}\r\n                      returnIssue={this.props.returnIssue}\r\n                     />} />\r\n                      <PrivateRouteAdmin path='/users/:userId' component={UserWithId}/>\r\n                      <PrivateRouteAdmin path='/stats' component={() => <Stats\r\n                      issues={this.props.issues}\r\n                      books={this.props.books.books}\r\n                      booksLoading={this.props.books.isLoading}\r\n                      booksErrMess={this.props.books.errMess}\r\n                      users={this.props.users.users}\r\n                      usersLoading={this.props.users.isLoading}\r\n                      usersErrMess={this.props.users.errMess}\r\n                     />}/>\r\n                      <Redirect to=\"/home\"/>\r\n          </Switch>\r\n        <Footer/>\r\n        <Modal isOpen={this.state.isDeleteModalOpen} toggle={this.toggleDeleteModal}>\r\n                     <ModalHeader toggle={this.toggleDeleteModal}>\r\n                         Confirm Deletion\r\n                     </ModalHeader>\r\n                     <ModalBody>\r\n                       Book details : <br/><br/>\r\n                        Name : {this.state.selectedBook?this.state.selectedBook.name:''} <br/>\r\n                        Authors : {this.state.selectedBook?this.state.selectedBook.author:''} <br/>\r\n                        ISBN Number : {this.state.selectedBook?this.state.selectedBook.isbn:''} <br/>\r\n                        Available Copies : {this.state.selectedBook?this.state.selectedBook.copies:''} <br/> <br/>\r\n                        Are you sure you wish to delete this book ? <br/><br/>\r\n         <Button color=\"danger\" onClick={()=>{\r\n           this.props.deleteBook(this.state.selectedBook._id);\r\n           this.toggleDeleteModal();}}>Yes</Button>{' '}  \r\n         <Button color=\"warning\" onClick={()=>{\r\n           this.toggleDeleteModal();\r\n         }}>No</Button>\r\n                     </ModalBody>\r\n          </Modal>\r\n          {this.state.selectedBook?(\r\n                 <Modal isOpen={this.state.isEditModalOpen} toggle={this.toggleEditModal}>\r\n                     <ModalHeader toggle={this.toggleEditModal}>\r\n                         Edit a book\r\n                     </ModalHeader>\r\n                     <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmitEdit(values)}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"name\" md={2}>Name </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        defaultValue={this.state.selectedBook.name}\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3),\r\n                                            uniqueName: uniqueName(this.state.selectedBook.name)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            uniqueName: ' There exists a book with this name already'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>                    \r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={2}>Authors </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        defaultValue={this.state.selectedBook.author}\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"isbn\" md={4}>ISBN No.</Label>\r\n                                <Col md={8}>\r\n                                    <Control.text model=\".isbn\" id=\"isbn\" name=\"isbn\"\r\n                                        defaultValue={this.state.selectedBook.isbn}\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(10), maxLength: maxLength(13), isNumber,\r\n                                            uniqueIsbn: uniqueIsbn(this.state.selectedBook.isbn)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".isbn\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 9 numbers',\r\n                                            maxLength: 'Must be 13 numbers or less',\r\n                                            isNumber: 'Must be a number',\r\n                                            uniqueIsbn: ' There exists a book with this ISBN No.'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                                        \r\n                        <Row className=\"form-group\">\r\n                            <Col>\r\n                            <Label htmlFor=\"cat\">Category</Label>\r\n                            <Control.select model=\".cat\" id=\"cat\" className=\"form-control\" defaultValue={this.state.selectedBook.cat}>\r\n                              <option>Romance</option> <option>Technology</option>\r\n                              <option>Computer Science</option> <option>Management</option>\r\n                              <option>Electronics</option> <option>Physics</option>\r\n                              <option>Chemistry</option> <option>Mathematics</option>\r\n                              <option>Fiction</option> <option>Philosophy</option>\r\n                              <option>Language</option> <option>Arts</option>\r\n                              <option>Other</option> \r\n\r\n                                                          </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"copies\" md={6}> Copies Available</Label>\r\n                                <Col md={6}>\r\n                                    <Control.text model=\".copies\" id=\"copies\" name=\"copies\"\r\n                                        defaultValue={this.state.selectedBook.copies}\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            requiredNum, minVal: minVal(1), maxVal: maxVal(1000), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".copies\"\r\n                                        messages={{\r\n                                            requiredNum: 'Required',\r\n                                            minVal: 'Must be greater than 0',\r\n                                            maxVal: 'Must be 1000 or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        <Row className=\"form-group\">\r\n                            <Col>\r\n                            <Label htmlFor=\"floor\">Floor </Label>\r\n                            <Control.select model=\".floor\" id=\"floor\" className=\"form-control\" defaultValue={this.state.selectedBook.floor}>\r\n                              <option>0</option> <option>1</option>\r\n                              <option>2</option> <option>3</option>\r\n                              <option>4</option> <option>5</option>\r\n                              <option>6</option> <option>7</option>\r\n                              <option>8</option> \r\n                            </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"shelf\" md={6}> Shelf</Label>\r\n                                <Col md={6}>\r\n                                    <Control.text model=\".shelf\" id=\"shelf\" name=\"shelf\"\r\n                                        defaultValue={this.state.selectedBook.shelf}\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            requiredNum, minVal: minVal(1), maxVal: maxVal(100), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".shelf\"\r\n                                        messages={{\r\n                                            requiredNum: 'Required',\r\n                                            minVal: 'Must be greater than 0',\r\n                                            maxVal: 'Must be 100 or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                     \r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"description\" md={2}>Description</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".description\" id=\"description\" name=\"description\"\r\n                                        rows=\"12\"\r\n                                        defaultValue={this.state.selectedBook.description}\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                          <Row>\r\n                          <Col className=\"ml-auto mr-auto\">\r\n                        <Button type=\"submit\" className=\"bg-primary\">\r\n                            Submit\r\n                        </Button>\r\n                        </Col>\r\n                        </Row>\r\n                    </LocalForm>\r\n                </ModalBody>\r\n               \r\n          </Modal>):(<React.Fragment/>)}\r\n\r\n          </div>\r\n           );     \r\n    }\r\n    }\r\n\r\n    export default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\r\n"]},"metadata":{},"sourceType":"module"}