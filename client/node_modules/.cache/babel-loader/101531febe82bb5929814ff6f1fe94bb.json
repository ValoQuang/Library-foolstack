{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Quang\\\\Documents\\\\GitHub\\\\Library-management-\\\\client\\\\src\\\\components\\\\Issue\\\\IssueComponent.tsx\";\nimport { CircularProgress } from '@mui/material';\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Col, Row } from 'reactstrap';\n\nclass Issue extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isbn: '',\n      roll: ''\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    if (this.props.booksLoading || this.props.usersLoading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CircularProgress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      })));\n    } else if (this.props.booksErrMess) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 30\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 35\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 40\n        }\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      }, this.props.booksErrMess))));\n    } else if (this.props.usersErrMess) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 30\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 35\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 40\n        }\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, this.props.usersErrMess))));\n    } else {\n      const bookoptions = this.props.books.map((book, index) => /*#__PURE__*/React.createElement(\"option\", {\n        key: book.isbn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 68\n        }\n      }, book.isbn));\n      const defaultBook = this.props.books[0]; // To just get list of the students (not the admins)\n\n      let useroptions = this.props.users.filter(user => !user.admin);\n      const defaultUser = useroptions[0];\n      useroptions = useroptions.map((user, index) => /*#__PURE__*/React.createElement(\"option\", {\n        key: user.roll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 59\n        }\n      }, user.roll));\n\n      if (this.state.isbn === '') {\n        this.setState({\n          isbn: defaultBook.isbn,\n          roll: defaultUser.roll\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container full\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row justify-content-center heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 5\n        }\n      }, \"  Issue book\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row row-content justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        onSubmit: e => {\n          let bookid = this.props.books.filter(book => book.isbn === this.state.isbn)[0]._id;\n\n          let studentid = this.props.users.filter(user => user.roll === this.state.roll)[0]._id;\n\n          this.props.postIssue(bookid, studentid);\n          e.preventDefault();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"isbn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, \" ISBN No. of book\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        defaultValue: defaultBook.name,\n        name: \"isbn\",\n        id: \"isbn\",\n        className: \"form-control\",\n        onInput: e => {\n          this.setState({\n            isbn: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, bookoptions)), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"roll\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }, \" Roll No. of student \"), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        id: \"roll\",\n        className: \"form-control\",\n        onInput: e => {\n          this.setState({\n            roll: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, useroptions)), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, \" Name of book \"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        placeholder: \"Name of Book\",\n        defaultValue: defaultBook.name,\n        value: !this.state.isbn ? '' : this.props.books.filter(book => book.isbn === this.state.isbn)[0].name,\n        className: \"form-control\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 14\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"author\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }, \" Authors \"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        id: \"author\",\n        name: \"author\",\n        placeholder: \"Name of authors\",\n        defaultValue: defaultBook.author,\n        value: !this.state.isbn ? '' : this.props.books.filter(book => book.isbn === this.state.isbn)[0].author,\n        className: \"form-control\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"name_student\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }\n      }, \" Name of student \"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        id: \"name_student\",\n        name: \"name_student\",\n        placeholder: \"Name of student\",\n        defaultValue: defaultUser.firstname + ' ' + defaultUser.lastname,\n        value: !this.state.roll ? '' : this.props.users.filter(user => user.roll === this.state.roll)[0].firstname + ' ' + this.props.users.filter(user => user.roll === this.state.roll)[0].lastname,\n        className: \"form-control\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }\n      }, \" Username of student \"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        id: \"username\",\n        name: \"username\",\n        placeholder: \"Username of student\",\n        defaultValue: defaultUser.username,\n        value: !this.state.roll ? '' : this.props.users.filter(user => user.roll === this.state.roll)[0].username,\n        className: \"form-control\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        className: \"align-self-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        className: \"bg-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }\n      }, \"Submit\"))))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 6\n        }\n      }));\n    }\n  }\n\n}\n\nexport default Issue;","map":{"version":3,"sources":["C:/Users/Quang/Documents/GitHub/Library-management-/client/src/components/Issue/IssueComponent.tsx"],"names":["CircularProgress","React","Component","Button","Form","FormGroup","Label","Input","Col","Row","Issue","constructor","props","state","isbn","roll","componentDidMount","window","scrollTo","render","booksLoading","usersLoading","booksErrMess","usersErrMess","bookoptions","books","map","book","index","defaultBook","useroptions","users","filter","user","admin","defaultUser","setState","e","bookid","_id","studentid","postIssue","preventDefault","name","target","value","author","firstname","lastname","username"],"mappings":"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","sourcesContent":["import { CircularProgress } from '@mui/material';\r\nimport React,{Component} from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Col,Row } from 'reactstrap';\r\n\r\ninterface issueProp {\r\n    booksLoading: Function,\r\n    usersLoading:Function,\r\n    booksErrMess:Function,\r\n    usersErrMess:Function,\r\n    books:any,\r\n    users:any,\r\n    postIssue:Function,\r\n}\r\ninterface issueState {\r\n    isbn: string,\r\n    roll: string\r\n}\r\n\r\nclass Issue extends Component<issueProp, issueState> {\r\n    constructor(props:issueProp){\r\n        super(props);\r\n        this.state={\r\n        isbn: '',\r\n        roll: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n    }\r\n    render(){\r\n    if (this.props.booksLoading||this.props.usersLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <CircularProgress />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (this.props.booksErrMess) {\r\n        return(\r\n            <div className=\"container loading\">\r\n                <div className=\"row heading\"> \r\n                    <div className=\"col-12\">\r\n                        <br/><br/><br/><br/>\r\n                        <h3>{this.props.booksErrMess}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (this.props.usersErrMess) {\r\n        return(\r\n            <div className=\"container loading\">\r\n                <div className=\"row heading\"> \r\n                    <div className=\"col-12\">\r\n                        <br/><br/><br/><br/>\r\n                        <h3>{this.props.usersErrMess}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n   {\r\n    const bookoptions= this.props.books.map((book:any,index:any)=>(<option \r\n    key={book.isbn}>{book.isbn}</option>));\r\n    const defaultBook=this.props.books[0];\r\n    // To just get list of the students (not the admins)\r\n    let useroptions=this.props.users.filter((user:any)=>(!user.admin));\r\n    const defaultUser=useroptions[0];\r\n    useroptions= useroptions.map((user: any,index: any)=>(<option \r\n    key={user.roll}>{user.roll}</option>))\r\n    if(this.state.isbn==='') {\r\n        this.setState({isbn: defaultBook.isbn,roll: defaultUser.roll  });\r\n    }\r\n    return (\r\n    <div className=\"container full\">\r\n    <div className=\"row justify-content-center heading\">\r\n    <div className=\"col-12\">\r\n    <h3 >  Issue book</h3>\r\n    </div>\r\n    </div>\r\n    <div className=\"row row-content justify-content-center\">\r\n    <Form onSubmit={(e) => {\r\n        let bookid=this.props.books.filter((book: { isbn: string; })=>(book.isbn===this.state.isbn))[0]._id\r\n        let studentid=this.props.users.filter((user: { roll: string; })=>(user.roll===this.state.roll))[0]._id;\r\n        this.props.postIssue(bookid,studentid);\r\n        e.preventDefault();\r\n    }}>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"isbn\"> ISBN No. of book</Label>\r\n            <Input type=\"select\" defaultValue={defaultBook.name} name=\"isbn\" id=\"isbn\" className=\"form-control\" onInput={(e:any)=>{this.setState({isbn: e.target.value})}}>\r\n                  {bookoptions}\r\n            </Input>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"roll\"> Roll No. of student </Label>\r\n            <Input type=\"select\" id=\"roll\" \r\n                   className=\"form-control\" onInput={(e:any)=>{this.setState({roll: e.target.value})}}>\r\n                   {useroptions}\r\n            </Input>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"name\"> Name of book </Label>\r\n             <Input type=\"text\" id=\"name\" name=\"name\"\r\n                    placeholder=\"Name of Book\" defaultValue={defaultBook.name}\r\n                    value={!this.state.isbn?''\r\n                    :this.props.books.filter((book: { isbn: string; })=>(book.isbn===this.state.isbn))[0].name}\r\n                    className=\"form-control\" disabled/>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"author\"> Authors </Label>\r\n            <Input type=\"text\" id=\"author\" name=\"author\"\r\n                   placeholder=\"Name of authors\" \r\n                   defaultValue={defaultBook.author}\r\n                   value={!this.state.isbn?''\r\n                   :this.props.books.filter((book: { isbn: string; })=>(book.isbn===this.state.isbn))[0].author}\r\n                    className=\"form-control\" disabled/>\r\n         </FormGroup>\r\n         <FormGroup row>\r\n          <Label htmlFor=\"name_student\"> Name of student </Label>\r\n            <Input type=\"text\" id=\"name_student\" name=\"name_student\"\r\n                   placeholder=\"Name of student\" \r\n                   defaultValue={defaultUser.firstname+' '+defaultUser.lastname}\r\n                   value={!this.state.roll?''\r\n                   :this.props.users.filter((user: { roll: string; })=>(user.roll===this.state.roll))[0].firstname+' '+\r\n                   this.props.users.filter((user: { roll: string; })=>(user.roll===this.state.roll))[0].lastname}\r\n                    className=\"form-control\" disabled/>\r\n         </FormGroup>\r\n         <FormGroup row>\r\n          <Label htmlFor=\"username\"> Username of student </Label>\r\n            <Input type=\"text\" id=\"username\" name=\"username\"\r\n                   placeholder=\"Username of student\" \r\n                   defaultValue={defaultUser.username}\r\n                   value={!this.state.roll?''\r\n                   :this.props.users.filter((user: { roll: string; })=>(user.roll===this.state.roll))[0].username}\r\n                    className=\"form-control\" disabled/>\r\n         </FormGroup>\r\n         <Row className=\"align-self-center\">\r\n            <Col className=\"text-center\">\r\n              <Button type=\"submit\" className=\"bg-primary\">\r\n                            Submit\r\n               </Button>\r\n            </Col>\r\n        </Row>\r\n      </Form>\r\n     </div>\r\n     <br/>\r\n    </div>\r\n );\r\n\r\n}\r\n}\r\n}\r\n\r\nexport default Issue;"]},"metadata":{},"sourceType":"module"}